trigger:
- master

resources:
  containers:
  - container: my_container
    image: ubuntu:16.04
  - container: redis
    image: redis
    ports: 
      - 6379

pool:
  vmImage: 'ubuntu-16.04'

container: my_container

services:
  redis: redis

strategy:
  matrix:
    node_10_x:
      node_version: 10.x


steps:
  - script : |
      set -e
      apt-get update
      apt-get install -y curl
      apt-get install redis-tools
      redis-cli -h redis ping
    displayName: 'install redis'

  - script: echo $(redis-cli ping)
    displayName: 'Redis Ping'

  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: 'Install Node.js'

  - script: |
      npm install
    displayName: 'npm install'

  - script: |
      npm run test-with-coverage-azure
    displayName: 'npm test'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: '**/TEST-RESULTS.xml'

  - task: PublishCodeCoverageResults@1
    inputs: 
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'